*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

html, body {
    width: 100%;
    height: 100%;
}
body {
    font-size: 100%;
    font-family: "proxima-nova",sans-serif;
}

/*
    Using width: 100% will always match the width of the container so it will stretch out the image.
*/
img {
    max-width: 100%;
}

header {
    width: 100%;
}

header img {
    text-align: center;
    display: block;
    margin: 0 auto;
}

h1,h2 {
    font-family: "adelle" ,serif;
    font-size: 1.5em;
}

h2 {
    font-size: 1em;
}

.wrapper {
    min-height: 100%;
    margin-bottom: -50px;
}

.wrapper:after {
    content: "";
    display: block;
}

.container {
    max-width: 980px;
    margin: 0 auto;
}

a {
    text-decoration: none;
}
.banner {
    width: 100%;
    position: relative;
}
.rightside {
    position: absolute;
    top: 10px;
    right: 50px;
}

.button {
    border-radius: 5px;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    background-color: #9ed6f9;
}

.right-button {
    width: 45%;
    margin: 0 auto;
    line-height: 54px;
    text-align: center;
    color: #001b7e;
}

.box {
    background-color: #b3b3b3;
    padding: 5px;
    margin: 5px;

}

/*
    The first value in flex is the grow value and the second value is the shrink value. The values determine the ratio of scaling for each item.
    You must have a flex container where display is set flex in order of it to work.
    If you set flex basis to "0", flex: 1 1 0;, then the spacing is determined by the content and the spacing.
    If you set flex basis to "auto", then content is ignored. It defaults to "0".

*/

.flex-container {
    display:-webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

.flex1 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
}

.flex2 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
}

.copyright {
    float: left;
}
/*
    Footer styling came from here: https://css-tricks.com/snippets/css/sticky-footer/
    The footer actually sits outside of the wrapper and there's an offset for it so that it's always at the bottom.
*/
.footer-nav {
    float: right;
}

.site-footer, .wrapper:after {
    height: 50px;
}

.site-footer {
    background-color: #c4c4c4;
}

@media only screen and (max-width: 768px) {
    .flex-container {
        display: block;
    }
}
